plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
}

// Imports for JSON minifying
import groovy.json.JsonOutput
import groovy.json.JsonSlurper

processResources {
	inputs.property "version", project.version

	filesMatching(["fabric.mod.json", "mcmod.info", "META-INF/mods.toml"]) {
		expand "version": project.version, "desc": project.mod_desc
	}
	// Automatically minify fabric.mod.json, pack.mcmeta and mcmod.info
	doLast {
        fileTree(dir: outputs.files.asPath, include: ["**/*.json", "**/pack.mcmeta", "**/mcmod.info"]).each {
            File file -> file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
        }
    }
}

sourceSets {
	loaderHeaders {
		
	}
	main {
		compileClasspath += loaderHeaders.output
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"

	def targetVersion = 8
	if (JavaVersion.current().isJava9Compatible()) {
		 it.options.release = targetVersion
	}
}

java {
	//withSourcesJar()
}

compileJava {
	// Disables generating source file names (they're the same as the class names, so duplicate data) 
	// and lvt info (the variable names). That makes it so the "helpful NPEs" feature doesn't give variables names,
	// but (as far as I've checked) no NPE can happen here, and if it does, the line numbers will be more than enough
	// to find where it occurred.
	options.compilerArgs << '-g:lines'
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Publishing repos
	}
}
